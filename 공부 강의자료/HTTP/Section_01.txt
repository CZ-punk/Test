인터넷 네트워크 정리

----------------------------------------------------------------------------------------------

IP ( Internet Protocol )

- 지정한 IP 주소 (IP Address) 에 데이터 전달

- 패킷 (Packet) 이라는 통신 단위로 데이터 전달

----------------------------------------------------------------------------------------------

TCP 특징 ( Transmission Control Protocol )

- 연결 지향 - TCP 3 way handshake (가상 연결):	먼저 잘 연결되었는 지 확인 후 전송

1. syn	2. syn, ack	3. ack ( ack 와 동시에 데이터 전달 )


- 데이터 전달 보증: 만약 전송 중 데이터의 손실이 발생하여도 내가 인지할 수 있음

잘 전달되면 서버에서 다시 잘 받았다고 확인 전송을 해준다.


- 순서 보장

만약 p1, p2, p3 순서로 전송했는데 받는 쪽에서 p1, p3, p2 로 받으면

서버가 틀린 부분인 p3 부터 다 버리고 p2 부터 다시 클라이언트에서 전송 요청을 보낸다.


위 내용들이 가능한 이유: 

TCP/IP 패킷 정보에 전송제어, 순서, 검증 정보 등 여러 데이터가 존재하기 때문

결론: 신뢰할 수 있는 프로토콜, 현재 주로 사용

----------------------------------------------------------------------------------------------

UDP 특징 ( User Datagram Protocol )

데이터 전달 및 순서가 보장X, 단순하고 빠르다.

IP 와 유사하지만, 다른 점은 Port + 체크섬 정도만 추가.

( 체크섬: UDP 방식으로 부터 온 메시지가 유효한 지 체크하는 기능 )

----------------------------------------------------------------------------------------------

Port 

TCP/IP 패킷 정보에 들어 있는데 IP는 목적지 서버를 찾는 것이고,

서버 안에서 돌아가는 애플리케이션을 찾는 것이 Port 이다.

예 ) 아파트 -> IP 주소 ,	 동 & 호수 -> Port

0 ~ 65535 할당 가능 ( 단, 0 ~ 1023: 잘 알려진 포트, 사용하지 않는 것이 좋다. )

- FTP: 20, 21	- HTTP: 80	- HTTPS: 443


예를 들어, 내 컴퓨터 ( 하나의 IP ) 로 여러 애플리케이션 ( 게임, 음악, 영상 등등 ) 을

한 IP 를 통해 서버로 부터 패킷이 들어오는데 해당 패킷이 게임용? 음악용? 영상용?

패킷인지를 구분할 때 쓰는 것이 Port 이다.

----------------------------------------------------------------------------------------------

DNS ( Domain Name System )

IP는 숫자로만 이루어져 있어 사람이 기억하기 어려워서 대체로 DNS 를 사용

- 전화번호부
- 도메인 명을 IP 주소로 변환

ex ) google.com -> 200.200.200.2

클라이언트가 DNS 서버에 도메인 명인 "google.com" 을 요청하면

DNS 서버에서 클라이언트로 "google.com" 의 IP 주소를 응답한다.

IP주소를 보고 접속!	
